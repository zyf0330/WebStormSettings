<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/media/zyf/data/Programming/project/duobei/mediasoup-demo/.gitignore" timestamp="1527477131073">
        <mark key="[" line="0" column="13" />
      </file>
      <file name="/fragment.js" timestamp="1527569743180">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1" column="23" />
        <mark key="^" line="0" column="18" />
        <mark key="." line="1" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/node-ffi-sunvote/test.js" timestamp="1526364653790">
        <mark key="[" line="46" column="17" />
        <mark key="]" line="46" column="36" />
        <mark key="." line="42" column="33" />
        <mark key="^" line="42" column="33" />
      </file>
      <file name="/a.dummy" timestamp="1526032830015">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/build.sh" timestamp="1526546260890">
        <mark key="[" line="2" column="27" />
        <mark key="]" line="2" column="45" />
        <mark key="^" line="2" column="45" />
        <mark key="." line="2" column="45" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/tinder-connector-sio/src/connector/Socket.js" timestamp="1526275525105">
        <mark key="[" line="58" column="26" />
        <mark key="]" line="58" column="25" />
        <mark key="." line="58" column="25" />
        <mark key="^" line="58" column="25" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_5.js" timestamp="1526362380209">
        <mark key="[" line="1" column="22" />
        <mark key="]" line="1" column="26" />
        <mark key="^" line="1" column="26" />
        <mark key="." line="1" column="26" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" timestamp="1527583659250">
        <mark key="a" line="136" column="15" />
        <mark key="'" line="58" column="23" />
        <mark key="[" line="58" column="0" />
        <mark key="]" line="58" column="0" />
        <mark key="." line="58" column="0" />
        <mark key="^" line="60" column="28" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_13.js" timestamp="1525937890876">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="14" />
        <mark key="^" line="0" column="14" />
        <mark key="." line="0" column="14" />
      </file>
      <file name="internal/inspector_async_hook.js" timestamp="1526385073102">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/test/testDispatchInfo.js" timestamp="1527213963932">
        <mark key="[" line="8" column="48" />
        <mark key="]" line="8" column="47" />
        <mark key="." line="8" column="47" />
        <mark key="^" line="8" column="47" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/.gitignore" timestamp="1526546285460">
        <mark key="[" line="1" column="21" />
        <mark key="]" line="3" column="9" />
        <mark key="^" line="3" column="9" />
        <mark key="." line="3" column="9" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list2" timestamp="1527583500526">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="2499" column="21" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list3" timestamp="1527583516985">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="2499" column="22" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Desktop/test/client.js" timestamp="1526883552584">
        <mark key="[" line="17" column="53" />
        <mark key="]" line="17" column="61" />
        <mark key="." line="17" column="61" />
        <mark key="^" line="17" column="61" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_10.js" timestamp="1527499581599">
        <mark key="[" line="7" column="24" />
        <mark key="]" line="8" column="14" />
        <mark key="^" line="8" column="14" />
        <mark key="." line="8" column="14" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/status" timestamp="1526386434155">
        <mark key="[" line="0" column="20" />
        <mark key="]" line="0" column="20" />
        <mark key="." line="0" column="20" />
        <mark key="^" line="0" column="20" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list1" timestamp="1527583478329">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="2499" column="0" />
        <mark key="]" line="2499" column="0" />
        <mark key="." line="2499" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/config/default.yaml" timestamp="1526364063280">
        <mark key="[" line="2" column="104" />
        <mark key="]" line="2" column="103" />
        <mark key="." line="2" column="103" />
        <mark key="^" line="2" column="103" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/tinder-vdqa-center/src/index.js" timestamp="1526447498358">
        <mark key="[" line="229" column="30" />
        <mark key="]" line="229" column="30" />
        <mark key="^" line="229" column="77" />
        <mark key="." line="229" column="30" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fakeConfig.json" timestamp="1527575519786">
        <mark key="'" line="14" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="13" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="14" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/mediasoup-demo/server/server.js" timestamp="1527483430591">
        <mark key="[" line="129" column="52" />
        <mark key="]" line="129" column="53" />
        <mark key="." line="129" column="53" />
        <mark key="^" line="129" column="53" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/package.json" timestamp="1526368425920">
        <mark key="[" line="22" column="23" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch.txt" timestamp="1527234974784">
        <mark key="[" line="0" column="1" />
        <mark key="]" line="0" column="0" />
        <mark key="^" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_4.js" timestamp="1526123288795">
        <mark key="[" line="13" column="5" />
        <mark key="]" line="13" column="3" />
        <mark key="^" line="13" column="3" />
        <mark key="." line="13" column="3" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_8.js" timestamp="1527224405354">
        <mark key="[" line="20" column="14" />
        <mark key="]" line="20" column="15" />
        <mark key="^" line="20" column="15" />
        <mark key="." line="20" column="15" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/mediasoup-demo/app/lib/urlFactory.js" timestamp="1527484057533">
        <mark key="[" line="0" column="16" />
        <mark key="]" line="0" column="27" />
        <mark key="." line="0" column="27" />
        <mark key="^" line="0" column="27" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/src/index.js" timestamp="1526359443759">
        <mark key="[" line="57" column="29" />
        <mark key="]" line="57" column="29" />
        <mark key="^" line="57" column="23" />
        <mark key="." line="57" column="29" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/.gitignore" timestamp="1526635231261">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="0" />
        <mark key="." line="2" column="0" />
        <mark key="^" line="6" column="22" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_14.js" timestamp="1525940172341">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="14" />
        <mark key="^" line="0" column="14" />
        <mark key="." line="0" column="14" />
      </file>
      <file name="internal/cluster/worker.js" timestamp="1526538144239">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-msg-audit/app.json" timestamp="1527145885767">
        <mark key="[" line="23" column="47" />
        <mark key="]" line="23" column="45" />
        <mark key="." line="23" column="45" />
        <mark key="^" line="23" column="45" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/msgCenter/Dispatch.js" timestamp="1525681248647">
        <mark key="[" line="83" column="6" />
        <mark key="]" line="83" column="6" />
        <mark key="." line="83" column="6" />
        <mark key="^" line="83" column="6" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-msg-audit/app.js" timestamp="1527067604626">
        <mark key="[" line="20" column="36" />
        <mark key="]" line="21" column="3" />
        <mark key="^" line="21" column="3" />
        <mark key="." line="21" column="3" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/tinder-connector-sio/src/connector/Connector.js" timestamp="1526465202681">
        <mark key="[" line="38" column="19" />
        <mark key="]" line="38" column="19" />
        <mark key="." line="38" column="19" />
        <mark key="^" line="38" column="19" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/confd/conf.d/config.js.toml" timestamp="1526642262205">
        <mark key="[" line="3" column="10" />
        <mark key="]" line="3" column="10" />
        <mark key="^" line="3" column="14" />
        <mark key="." line="3" column="10" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/msgCenter/Client.js" timestamp="1527564121879">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="622" column="23" />
        <mark key="]" line="622" column="31" />
        <mark key="^" line="622" column="31" />
        <mark key="." line="622" column="31" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/node-ffi-sunvote/.npmignore" timestamp="1526002605946">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="^" line="3" column="12" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/start.sh" timestamp="1526369004301">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
        <mark key="^" line="1" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/tinder-vdqa-edge/node_modules/tinder-edge-nodejs/src/protos/tinder/index.js" timestamp="1525852181546">
        <mark key="[" line="101" column="0" />
        <mark key="]" line="101" column="0" />
        <mark key="^" line="100" column="0" />
        <mark key="." line="101" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_3.js" timestamp="1526032943256">
        <mark key="[" line="0" column="13" />
        <mark key="]" line="0" column="13" />
        <mark key="^" line="0" column="13" />
        <mark key="." line="0" column="13" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/node-ffi-sunvote/libdbsunvote.js" timestamp="1526366469889">
        <mark key="[" line="9" column="7" />
        <mark key="]" line="9" column="26" />
        <mark key="." line="9" column="34" />
        <mark key="^" line="9" column="34" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/.gitignore" timestamp="1527573982351">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="0" />
        <mark key="^" line="7" column="15" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-msg-audit/config.js" timestamp="1527146255066">
        <mark key="[" line="11" column="15" />
        <mark key="]" line="11" column="22" />
        <mark key="." line="11" column="22" />
        <mark key="^" line="11" column="22" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/helper.js" timestamp="1527502113454">
        <mark key="[" line="156" column="14" />
        <mark key="]" line="156" column="14" />
        <mark key="." line="156" column="14" />
        <mark key="^" line="155" column="10" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/tinder-vdqa-edge/Command.js" timestamp="1526380116056">
        <mark key="[" line="53" column="2" />
        <mark key="]" line="53" column="2" />
        <mark key="^" line="53" column="2" />
        <mark key="." line="53" column="2" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" timestamp="1527502301808">
        <mark key="'" line="276" column="42" />
        <mark key="[" line="75" column="10" />
        <mark key="]" line="75" column="21" />
        <mark key="." line="75" column="21" />
        <mark key="^" line="75" column="21" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-msg-audit/confd.sh" timestamp="1527145611612">
        <mark key="[" line="0" column="19" />
        <mark key="]" line="13" column="6" />
        <mark key="^" line="13" column="6" />
        <mark key="." line="13" column="6" />
      </file>
      <file name="/JavaScript Console" timestamp="1527577870535">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/fake.js" timestamp="1527575035097" />
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/pack.sh" timestamp="1526547326521">
        <mark key="[" line="3" column="82" />
        <mark key="]" line="3" column="82" />
        <mark key="." line="3" column="82" />
        <mark key="^" line="4" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_11.js" timestamp="1527572217235">
        <mark key="'" line="10" column="0" />
        <mark key="[" line="14" column="2" />
        <mark key="]" line="14" column="9" />
        <mark key="^" line="14" column="9" />
        <mark key="." line="14" column="9" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-msg-audit/start.sh" timestamp="1527145888693">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="^" line="3" column="44" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-msg-audit/doc.md" timestamp="1527141689257">
        <mark key="[" line="2" column="8" />
        <mark key="]" line="3" column="23" />
        <mark key="^" line="3" column="23" />
        <mark key="." line="3" column="23" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/1" timestamp="1526362400021">
        <mark key="[" line="0" column="2" />
        <mark key="]" line="0" column="1" />
        <mark key="^" line="0" column="1" />
        <mark key="." line="0" column="1" />
      </file>
      <file name="/Dummy.txt" timestamp="1527579626482">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="0" column="0" />
      </file>
      <file name="internal/child_process.js" timestamp="1526538168740">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/tinder-vdqa-edge/1.js" timestamp="1525851732685">
        <mark key="[" line="0" column="6" />
        <mark key="]" line="0" column="8" />
        <mark key="^" line="0" column="8" />
        <mark key="." line="0" column="8" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_2.js" timestamp="1526022008117">
        <mark key="[" line="1" column="11" />
        <mark key="]" line="1" column="11" />
        <mark key="^" line="1" column="11" />
        <mark key="." line="1" column="11" />
      </file>
      <file name="$USER_HOME$/Desktop/test/server.js" timestamp="1526295949198">
        <mark key="[" line="14" column="20" />
        <mark key="]" line="15" column="46" />
        <mark key="." line="15" column="46" />
        <mark key="^" line="15" column="46" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_6.js" timestamp="1526615403139">
        <mark key="[" line="1" column="12" />
        <mark key="]" line="1" column="13" />
        <mark key="^" line="1" column="13" />
        <mark key="." line="1" column="13" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch.js" timestamp="1525941532263">
        <mark key="[" line="0" column="12" />
        <mark key="]" line="0" column="31" />
        <mark key="^" line="0" column="31" />
        <mark key="." line="0" column="31" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/vdqa-base-station/node_modules/node-ffi-sunvote/libdbsunvote.js" timestamp="1526018202531">
        <mark key="[" line="48" column="87" />
        <mark key="]" line="48" column="3" />
        <mark key="^" line="48" column="3" />
        <mark key="." line="48" column="3" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/app.js" timestamp="1527565000611">
        <mark key="'" line="185" column="13" />
        <mark key="[" line="633" column="15" />
        <mark key="]" line="633" column="26" />
        <mark key="." line="401" column="67" />
        <mark key="^" line="401" column="67" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/scratch_12.js" timestamp="1527578914969">
        <mark key="[" line="1" column="12" />
        <mark key="]" line="1" column="47" />
        <mark key="^" line="1" column="46" />
        <mark key="." line="1" column="46" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-msg-audit/.gitignore" timestamp="1527146033381">
        <mark key="[" line="3" column="9" />
        <mark key="]" line="4" column="9" />
        <mark key="^" line="4" column="9" />
        <mark key="." line="4" column="9" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/duobeiyun-mobile-server/1.js" timestamp="1525837675273">
        <mark key="[" line="6" column="48" />
        <mark key="]" line="6" column="54" />
        <mark key="." line="6" column="54" />
        <mark key="^" line="6" column="54" />
      </file>
      <file name="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" timestamp="1527583508749">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="299" column="11" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="4" column="6" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="83" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="74" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="44" column="51" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="2" column="33" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="46" column="15" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="79" column="13" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="78" column="21" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="103" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="114" column="7" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="19" column="42" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="78" column="35" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="28" column="40" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="20" column="85" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="96" column="20" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="94" column="15" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="3" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fakeConfig.json" />
      <jump line="1" column="6" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="62" column="16" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="59" column="6" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="13" column="22" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="23" column="6" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="0" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="71" column="37" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="72" column="15" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="126" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="10" column="19" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="110" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="194" column="10" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="17" column="29" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="5" column="12" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fakeConfig.json" />
      <jump line="73" column="34" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="8" column="27" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="11" column="108" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="12" column="5" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="21" column="60" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="29" column="60" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="30" column="57" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="64" column="22" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="71" column="35" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="75" column="21" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="174" column="51" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="270" column="18" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="274" column="15" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="276" column="42" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/Client.js" />
      <jump line="11" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="5" column="12" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="23" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="77" column="17" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="14" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="67" column="10" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="68" column="39" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="98" column="4" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="85" column="26" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="51" column="44" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="107" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="97" column="4" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="100" column="15" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="87" column="4" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="86" column="4" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="89" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="90" column="10" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="95" column="37" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="92" column="8" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="93" column="8" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="99" column="14" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="22" column="20" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="15" column="20" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="75" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="149" column="19" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="150" column="25" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="153" column="17" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="115" column="11" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="6" column="4" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fakeConfig.json" />
      <jump line="7" column="14" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fakeConfig.json" />
      <jump line="61" column="6" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="6" column="0" filename="$APPLICATION_CONFIG_DIR$/scratches/scratch_11.js" />
      <jump line="16" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="4" column="30" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="184" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="17" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="66" column="7" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="64" column="4" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="63" column="17" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="18" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="35" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="56" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="69" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="14" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fakeConfig.json" />
      <jump line="10" column="23" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="2498" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="0" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list1" />
      <jump line="0" column="17" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="0" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list2" />
      <jump line="2499" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list" />
      <jump line="0" column="0" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/list3" />
      <jump line="54" column="26" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="60" column="37" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
      <jump line="58" column="23" filename="/media/zyf/data/Programming/project/duobei/dby-test-mobile-server/fake.js" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">Y29uc29sZS5sb2cocHJvY2Vzcy5hcmd2KQo=</text>
      </register>
      <register name="-" type="4">
        <text>,</text>
      </register>
      <register name="/" type="4">
        <text>list</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ZmFrZUNvbmZpZy5qc29uCg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Y29uc29sZS5sb2cocHJvY2Vzcy5hcmd2KQo=</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="3" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">RW1pbHkgVmF6cXVleiwxMTcyMDQwNDcK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">SmFtZXMgSm9obnNvbiwxMTIwMTAxNTUKUGV0ZXIgR2FyemEsMTEwMjgyNzU0CktldmluIE1jY2x1cmUsMTE4NjYwMzQ2ClBhbWVsYSBXaGVlbGVyLDExODEzODU0MApBbmRyZXcgSm9uZXMsMTE4NzgzMDg4CkVyaWMgTWNjdWxsb3VnaCwxMTIwOTQ4ODgKU2NvdHQgU3VtbWVycywxMTE2MjI0MTAKSmFtZXMgQmFrZXIsMTE4ODkxODY3ClRyYWN5IFJvdGgsMTEyNTA2OTUzCkFteSBDb253YXksMTEzNjYzMzMyCg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">c2QK</text>
      </register>
      <register name="9" type="4">
        <text>{
	&quot;authInfoDomain&quot;: &quot;api.duobeiyun.com&quot;,
	&quot;partner&quot;: &quot;20150727103303&quot;,
	&quot;appKey&quot;: &quot;78376ca8f92247ec8c46251582dc7add&quot;,
	&quot;addrs&quot;: [
		&quot;http://ws5.duobeiyun.com&quot;,
		&quot;http://ws6.duobeiyun.com&quot;,
		&quot;http://ws7.duobeiyun.com&quot;
	],
	&quot;roomId&quot;: &quot;jz7ab1232745604c0080ee3d0f8edf3efc&quot;
}</text>
      </register>
      <register name=":" type="4">
        <text>118</text>
      </register>
    </registers>
    <search>
      <last-search>list</last-search>
      <last-offset />
      <last-pattern>list</last-pattern>
      <last-replace>remainNum</last-replace>
      <last-substitute>num</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>el</entry>
        <entry>isP</entry>
        <entry>res</entry>
        <entry>Tracy</entry>
        <entry>Melissa Price</entry>
        <entry>todo</entry>
        <entry>clients</entry>
        <entry>isDis</entry>
        <entry>5</entry>
        <entry>6</entry>
        <entry>dev</entry>
        <entry>null</entry>
        <entry>100</entry>
        <entry>get</entry>
        <entry>nnn</entry>
        <entry>wa</entry>
        <entry>808</entry>
        <entry>e</entry>
        <entry encoding="base64">Pj4=</entry>
        <entry>list</entry>
      </history-search>
      <history-cmd>
        <entry>wq</entry>
        <entry>176</entry>
        <entry>742</entry>
        <entry>860</entry>
        <entry>866</entry>
        <entry>911</entry>
        <entry>746</entry>
        <entry>371</entry>
        <entry>s/index/addrIndex/gc</entry>
        <entry>%s/index/addrIndex/gc</entry>
        <entry>+19</entry>
        <entry>+30</entry>
        <entry>%s/res/response/gc</entry>
        <entry>%s/num/remainNum/gc</entry>
        <entry>we</entry>
        <entry encoding="base64">JzwsJz4rMTc=</entry>
        <entry encoding="base64">JzwsJz4tMTU=</entry>
        <entry>2500</entry>
        <entry>w</entry>
        <entry>118</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>